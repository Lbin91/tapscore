import 'package:flutter/material.dart';
import '../widgets/option_card.dart';
import '../widgets/banner_ad_widget.dart';
import '../theme/app_colors.dart';
import '../models/score_option.dart';
import '../models/sports.dart';
import '../widgets/score_settings_dialog.dart';

class OptionScreen extends StatelessWidget {
  final Sport sport; // ÏÑ†ÌÉùÎêú Ïä§Ìè¨Ï∏† Í∞ùÏ≤¥

  const OptionScreen({
    Key? key,
    required this.sport,
  }) : super(key: key);

  final List<ScoreOption> options = const [
    ScoreOption(
      id: 'official',
      name: 'Í≥µÏãù Í∑úÏπô',
      icon: 'üìã',
      description: 'Í≥µÏãù Í∑úÏπôÏóê Îî∞Îùº Ï†êÏàòÎ•º Í∏∞Î°ùÌï©ÎãàÎã§.',
    ),
    ScoreOption(
      id: 'single',
      name: 'Îã®Ïùº ÎùºÏö¥Îìú',
      icon: '1Ô∏è‚É£',
      description: 'Îã®Ïùº ÎùºÏö¥ÎìúÎ°ú Í≤åÏûÑÏùÑ ÏßÑÌñâÌï©ÎãàÎã§.',
    ),
    ScoreOption(
      id: 'custom',
      name: 'Ïª§Ïä§ÌÖÄ',
      icon: '‚öôÔ∏è',
      description: 'ÏõêÌïòÎäî Î∞©ÏãùÏúºÎ°ú Ï†êÏàòÎ•º Í∏∞Î°ùÌï©ÎãàÎã§.',
    ),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.backgroundColor,
      appBar: _buildAppBar(),
      body: _buildBody(context),
    );
  }

  // Î©îÏù∏ ÌôîÎ©¥Ïùò bodyÎ•º Íµ¨ÏÑ±ÌïòÎäî Î©îÏÜåÎìú
  // ÏòµÏÖò Ïπ¥Îìú Î™©Î°ùÍ≥º Í¥ëÍ≥† Î∞∞ÎÑàÎ•º Ìè¨Ìï®
  Widget _buildBody(BuildContext context) {
    return Column(
      children: [
        Expanded(
          child: _buildOptionCards(context),
        ),
        SizedBox(height: 8),
        const BannerAdWidget(type: BannerAdType.detail),
      ],
    );
  }

  // Ïï±Î∞îÎ•º Íµ¨ÏÑ±ÌïòÎäî Î©îÏÜåÎìú
  // Ïä§Ìè¨Ï∏† Ïù¥Î¶ÑÍ≥º Îí§Î°úÍ∞ÄÍ∏∞ Î≤ÑÌäºÏùÑ Ìè¨Ìï®Ìïú ÏÉÅÎã®Î∞î Íµ¨ÏÑ±
  PreferredSizeWidget _buildAppBar() {
    return AppBar(
      title: _buildAppBarTitle(),
      backgroundColor: AppColors.subMainColor,
      elevation: 4.0,
      iconTheme: IconThemeData(color: Colors.white),
    );
  }

  // Ïï±Î∞îÏùò ÌÉÄÏù¥ÌãÄÏùÑ Íµ¨ÏÑ±ÌïòÎäî Î©îÏÜåÎìú
  // Ïä§Ìè¨Ï∏† Ïù¥Î¶ÑÍ≥º Ï†êÏàò Î∞©Ïãù ÌÖçÏä§Ìä∏Î•º ÌëúÏãú
  Widget _buildAppBarTitle() {
    return Text(
      '${sport.name} Ï†êÏàò Î∞©Ïãù',
      style: TextStyle(
        color: AppColors.subMainTitleColor,
        fontSize: 20,
        fontWeight: FontWeight.bold,
      ),
    );
  }

  // ÏòµÏÖò Ïπ¥ÎìúÎì§Ïùò Ï†ÑÏ≤¥ Î†àÏù¥ÏïÑÏõÉÏùÑ Íµ¨ÏÑ±ÌïòÎäî Î©îÏÜåÎìú
  // Ìå®Îî©Í≥º Ïπ¥Îìú Î∞∞ÏπòÎ•º Îã¥Îãπ
  Widget _buildOptionCards(BuildContext context) {
    return Padding(
      padding: EdgeInsets.symmetric(horizontal: 18.0, vertical: 16.0),
      child: Center(
        child: Column(
          children: [
            _buildOptionCardRow(context),
            SizedBox(height: 18),
            _buildSingleOptionCard(context),
          ],
        ),
      ),
    );
  }

  // Í∞úÎ≥Ñ ÏòµÏÖò Ïπ¥ÎìúÎ•º Íµ¨ÏÑ±ÌïòÎäî Î©îÏÜåÎìú
  // Ïπ¥ÎìúÏùò ÎπÑÏú®Í≥º ÌÑ∞Ïπò Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨Î•º Îã¥Îãπ
  Widget _buildOptionCard(BuildContext context, ScoreOption option,
      {bool useExpanded = true}) {
    Widget card = AspectRatio(
      aspectRatio: 1,
      child: OptionCard(
        optionName: option.name,
        optionIcon: option.icon,
        onTap: () => _handleOptionSelected(context, option),
      ),
    );

    return useExpanded ? Expanded(child: card) : card;
  }

  // Ï≤´ Î≤àÏß∏ Ï§ÑÏùò ÏòµÏÖò Ïπ¥ÎìúÎì§ÏùÑ Íµ¨ÏÑ±ÌïòÎäî Î©îÏÜåÎìú
  // Í≥µÏãù Í∑úÏπôÍ≥º Îã®Ïùº ÎùºÏö¥Îìú Ïπ¥ÎìúÎ•º Í∞ÄÎ°úÎ°ú Î∞∞Ïπò
  Widget _buildOptionCardRow(BuildContext context) {
    return Row(
      children: [
        _buildOptionCard(context, options[0]),
        SizedBox(width: 18),
        _buildOptionCard(context, options[1]),
      ],
    );
  }

  // Îëê Î≤àÏß∏ Ï§ÑÏùò Îã®Ïùº ÏòµÏÖò Ïπ¥ÎìúÎ•º Íµ¨ÏÑ±ÌïòÎäî Î©îÏÜåÎìú
  // Ïª§Ïä§ÌÖÄ ÏòµÏÖò Ïπ¥ÎìúÎ•º ÌôîÎ©¥ Ï†àÎ∞ò ÌÅ¨Í∏∞Î°ú Î∞∞Ïπò
  Widget _buildSingleOptionCard(BuildContext context) {
    return SizedBox(
      width: (MediaQuery.of(context).size.width - 36) / 2,
      child: _buildOptionCard(context, options[2], useExpanded: false),
    );
  }

  // ÏòµÏÖò ÏÑ†ÌÉù Ïãú Ïä§ÎÇµÎ∞îÎ•º ÌëúÏãúÌïòÎäî Î©îÏÜåÎìú
  // ÏÑ†ÌÉùÎêú ÏòµÏÖòÏùò Ïù¥Î¶ÑÍ≥º Ìï®Íªò ÏïåÎ¶ºÏùÑ ÌëúÏãú
  void _showOptionSelectedSnackBar(BuildContext context, ScoreOption option) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text('${option.name} ÏÑ§Ï†ïÏù¥ Ï†ÅÏö©ÎêòÏóàÏäµÎãàÎã§.'),
        backgroundColor: AppColors.subMainColor,
        behavior: SnackBarBehavior.floating,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(8.0),
        ),
      ),
    );
  }

  void _handleOptionSelected(BuildContext context, ScoreOption option) {
    // ÏÑ†ÌÉùÎêú ÏòµÏÖòÏóê Îî∞Îùº ÏÑ§Ï†ï ÌåùÏóÖ ÌëúÏãú
    _showSettingsDialog(context, option);
  }

  void _showSettingsDialog(BuildContext context, ScoreOption option) {
    showDialog(
      context: context,
      barrierDismissible: true,
      barrierColor: Colors.black54,
      builder: (context) => ScoreSettingsDialog(
        sport: sport,
        option: option,
        onSettingsChanged: (maxRound, scorePerRound) {
          sport.updateRoundSettings(
            newMaxRound: maxRound,
            newScorePerRound: scorePerRound,
          );
          _showOptionSelectedSnackBar(context, option);
        },
      ),
    );
  }
}
